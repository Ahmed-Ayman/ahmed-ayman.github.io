{"version":3,"sources":["webpack:///./src/components/List/List.js","webpack:///./src/pages/tags.js"],"names":["List","props","edges","theme","Fragment","space","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to","TagsPage","posts","data","tagsPosts","forEach","tags","tag","push","tagList","Article","color","neutral","gray","j","brand","primary","Headline","item","className","Seo","pageTitle","query"],"mappings":"qNAgDeA,EA5CF,SAAAC,GAAU,IACbC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MAEf,OACE,kBAAC,IAAMC,SAAP,KACE,6DAoBcD,EAAME,MAAMC,MAAMC,EACjBJ,EAAME,MAAME,EAIZJ,EAAME,MAAMG,GACVL,EAAMM,KAAKC,KAAKC,EACdR,EAAMM,KAAKG,WAAWC,OA1BtCX,EAAMY,KAAI,SAAAC,GAAS,IAAD,EAMbA,EAJFC,KACiBC,EAHF,EAGbC,YAAeD,MACLE,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIE,IAAKF,EAAT,qCAUQhB,EAAME,MAAMC,MAAMC,EACjBJ,EAAME,MAAME,EAIZJ,EAAME,MAAMG,GACVL,EAAMM,KAAKC,KAAKC,EACdR,EAAMM,KAAKG,WAAWC,OAhBjC,kBAAC,OAAD,CAAMS,GAAIH,GAAOF,QAZ3B,0FAqBgBd,EAAME,MAAMC,MAAMC,EArBlC,YAsBiBJ,EAAME,MAAME,EAtB7B,kEA0BiBJ,EAAME,MAAMG,GA1B7B,gBA2BmBL,EAAMM,KAAKC,KAAKC,EA3BnC,gBA4BqBR,EAAMM,KAAKG,WAAWC,EA5B3C,eAqBgBV,EAAME,MAAMC,MAAMC,EACjBJ,EAAME,MAAME,EAIZJ,EAAME,MAAMG,GACVL,EAAMM,KAAKC,KAAKC,EACdR,EAAMM,KAAKG,WAAWC,O,kDCqDhCU,UA/EE,SAAAtB,GAAU,IAGNuB,EAEfvB,EAHFwB,KACED,MAAQtB,MAKNwB,EAAY,GAClBF,EAAMG,SAAQ,SAAAZ,GAAS,IAIHa,EAEdb,EAHFC,KACEE,YAAcU,KAIdA,GAAgB,MAARA,GACVA,EAAKD,SAAQ,SAAAE,GACPA,GAAc,MAAPA,IACJH,EAAUG,KACbH,EAAUG,GAAO,IAEnBH,EAAUG,GAAKC,KAAKf,UAM5B,IAAMgB,EAAU,GAEhB,IAAK,IAAIF,KAAOH,EACdK,EAAQD,KAAK,CAACD,EAAKH,EAAUG,KAG/B,OACE,kBAAC,IAAMzB,SAAP,KACE,kBAAC4B,EAAA,EAAD,CAAS7B,MAAOA,KACd,kEAiBaA,IAAM8B,MAAMC,QAAQC,KAAKC,EAKvBjC,IAAM8B,MAAMI,MAAMC,QAKrBnC,IAAM8B,MAAMI,MAAMC,aA1B5B,kBAACC,EAAA,EAAD,CAAUtB,MAAM,gBAAgBd,MAAOA,OAExC4B,EAAQjB,KAAI,SAAA0B,GAAI,OACf,6BAASnB,IAAKmB,EAAK,GAAnB,sCAaWrC,IAAM8B,MAAMC,QAAQC,KAAKC,EAKvBjC,IAAM8B,MAAMI,MAAMC,QAKrBnC,IAAM8B,MAAMI,MAAMC,aAtB1B,8DAYSnC,IAAM8B,MAAMC,QAAQC,KAAKC,EAKvBjC,IAAM8B,MAAMI,MAAMC,QAKrBnC,IAAM8B,MAAMI,MAAMC,aArBxB,kBAAC,OAAD,CAAMhB,GAAI,OAAOkB,EAAK,GAAIC,UAAU,YACpC,kBAAC,IAAD,MADA,IACUD,EAAK,KAGnB,kBAAC,EAAD,CAAMtC,MAAOsC,EAAK,GAAIrC,MAAOA,UAXjC,2GAkBeA,IAAM8B,MAAMC,QAAQC,KAAKC,EAlBxC,2DAuBiBjC,IAAM8B,MAAMI,MAAMC,QAvBnC,+DA4BcnC,IAAM8B,MAAMI,MAAMC,QA5BhC,eAkBenC,IAAM8B,MAAMC,QAAQC,KAAKC,EAKvBjC,IAAM8B,MAAMI,MAAMC,QAKrBnC,IAAM8B,MAAMI,MAAMC,YAKhC,kBAACI,EAAA,EAAD,CAAKC,UAAU,WAtErB,IAkFaC,EAAK","file":"component---src-pages-tags-js-347897b6fd97e3c75a0c.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","import {FaTag} from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport theme from \"../theme/theme.yaml\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nconst TagsPage = props => {\n  const {\n    data: {\n      posts: {edges: posts}\n    }\n  } = props;\n\n  // Create tags list\n  const tagsPosts = {};\n  posts.forEach(edge => {\n\n    const {\n      node: {\n        frontmatter: {tags}\n      }\n    } = edge;\n\n    if (tags && tags != null) {\n      tags.forEach(tag => {\n        if (tag && tag != null) {\n          if (!tagsPosts[tag]) {\n            tagsPosts[tag] = [];\n          }\n          tagsPosts[tag].push(edge);\n        }\n      })\n    }\n  });\n\n  const tagList = [];\n\n  for (var tag in tagsPosts) {\n    tagList.push([tag, tagsPosts[tag]]);\n  }\n\n  return (\n    <React.Fragment>\n      <Article theme={theme}>\n        <header>\n          <Headline title=\"Posts by tags\" theme={theme}/>\n        </header>\n        {tagList.map(item => (\n          <section key={item[0]}>\n            <h2>\n              <Link to={\"tag/\"+item[0]} className=\"logoType\">\n              <FaTag/> {item[0]}\n            </Link>\n          </h2>\n          <List edges={item[1]} theme={theme} />\n          </section>\n          ))}\n        {/* --- STYLES --- */}\n        <style jsx>{`\n          h2 {\n            margin: 0 0 0.5em;\n            color: ${theme.color.neutral.gray.j};\n\n          }\n          @from-width desktop {\n            :global(a:hover) {\n              color: ${theme.color.brand.primary};\n            }\n          }\n          h2 :global(svg) {\n            height: 0.8em;\n            fill: ${theme.color.brand.primary};\n          }\n        `}</style>\n      </Article>\n\n      <Seo pageTitle=\"Tags\"/>\n    </React.Fragment>\n  );\n};\n\nTagsPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default TagsPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//[0-9]+.*--/\" }\n      }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            tags\n            author\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}